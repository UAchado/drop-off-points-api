name: CI Pipeline

on: 
  push:
    branches: [ main ]

jobs:

  test-and-build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run tests with pytest
      env: 
        DATABASE_URL: mysql+mysqlconnector://user:password@localhost:3306/testdb
      run: pytest

    - name: Authenticate with AWS
      env:
        AWS_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      run: aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin ${{var.AWS_ECR_REPO}}
      
    - name: Build the Docker image
      run: docker build -t ${{var.AWS_ECR_REPO}}/drop-off-points-api -f Dockerfile.prod .
    - name: Push image to DockerHub
      run: docker push ${{var.AWS_ECR_REPO}}/drop-off-points-api:latest
